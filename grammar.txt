program : PROGRAM variable SEMI block DOT

block : declarations compound_statement

declarations : (VAR (variable_declaration SEMI)+)* (PROCEDURE ID (LPAR formal_parameter_list RPAR)? SEMI block SEMI)*

procedure_declaration : PROCEDURE ID (LPAR formal_parameter_list RPAR)? SEMI block SEMI

formal_parameter_list : formal_parameters
                      | formal_parameters SEMI formal_parameter_list

formal_parameters : ID (COMMA ID)* COLON type_spec

variable_declaration : ID (COMMA ID)* COLON type_spec

type_spec : INTEGER | REAL

compound_statement : BEGIN statement_list END

statement_list : statement
               | statement SEMI statement_list

statement : compound_statement
          | assignment_statement
          | empty

assignment_statement : variable ASSIGN expr

proccall_statement : ID LPAR (expr (COMMA expr)*)? RPAR"

if_statement : IF LPAR or_condition RPAR THEN (stamement_list | compound_statement) (SEMI ELSE (statement_list | compound_statement))?

while_statement : WHILE LPAR or_condition RPAR DO (statement | compound_statement)

for_statement : FOR LPAR assignment_statement (TO | DOWNTO) expr RPAR DO (statement | compound_statement)

empty :

compound_condition : condition ((AND | OR) condition)* ------ not good

or_condition : and_condition (OR or_condition)*

and_condition : condition (AND and_condition)*

condition : expr (EQUAL | NOT_EQUAL | LESS | LESS_EQUAL | GREATER | GREATER_EQUAL) expr |
            LPAR or_condition RPAR

expr : term ((PLUS | MINUS) term)*

term : factor ((MUL | INTEGER_DIV | FLOAT_DIV) factor)*

factor : PLUS factor
       | MINUS factor
       | INTEGER_CONST
       | REAL_CONST
       | LPAR expr RPAR
       | variable

variable: ID